{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template creates a VPC and an auto-scaling group",
    
    "Parameters": {
        "WebServerKeyName": {
            "Description": "SSH keypair for ec2 instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }    
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.90.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "BlogVPC"
                    }
                ]
                
            }    
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC",
            "Properties": {
                "Tags": [ 
                    {
                        "Key": "Name", 
                        "Value": "Blogigw"
                    }
                ]    
            } 
        },
        "InternetGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {"Ref": "InternetGateway"},
                "VpcId": {"Ref": "VPC"}
                
            }
        },
        "DMZ1Public": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.99.1.0/24",
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "KeyName": "Name",
                        "Value": "DMZ1Public"
                    }
                ]

            }
        },
        "DMZ2Public": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.99.2.0/24",
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "KeyName": "Name",
                        "Value": "DMZ2Public"
                    }
                ]

            }
        },
        "AppLayer1Private": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.99.11.0/24",
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "KeyName": "Name",
                        "Value": "AppLayer1Private"
                    }
                ]

            }
        },
        "AppLayer2Private": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.99.12.0/24",
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "KeyName": "Name",
                        "Value": "AppLayer2Private"
                    }
                ]

            }
        },
        "PublicRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "KeyName": "Name",
                        "Value": "PublicRT"
                    }
                ]
 
            }
        },
        "RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "DMZ1Public" 
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "RouteTableAssociationB": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "DMZ2Public" 
                },
                "RouteTableId": {
                    "Ref": "PublicRT"
                }
            }
        },
        "RoutePublicToInternet": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRT"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {"Ref": "InternetGateway"}

            },
            "DependsOn": "InternetGatewayAttachment"


        },
        "PrivateRT": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "Tags": [ 
                    {
                        "Key": "Name",
                        "Value": "PrivateRT"
                    }
                ]
            }

        },
        "RouteTableAssociationC": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "AppLayer1Private" 
                },
                "RouteTableId": {
                    "Ref": "PrivateRT"
                }
            }
        },
        "RouteTableAssociationD": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "AppLayer2Private" 
                },
                "RouteTableId": {
                    "Ref": "PrivateRT"
                }
            }
        },

        "NATElasticIp": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "VPC"
            },
            "DependsOn": "InternetGatewayAttachment"
        },
        "NATGateway": {
            "Type": "AWS::EC2::NatGateway",
            "DependsOn": "NATElasticIp",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATElasticIp",
                        "AllocationId"
                    ]
                        
                    
                },
                "SubnetId": {
                    "Ref": "DMZ2Public"
                }
            }
        },
        "NATGatewayRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRT"
                },
                "CidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway"
                }
            }
        },
        "DMZNACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "DMZNACL"
                    }
                ]
            }

        },
        "SubnetNetworkAclAssociationA": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {"Ref": "DMZ1Public"},
                "NetworkAclId": {
                    "Ref": "DMZNACL"
                }
            }

        },
        "SubnetNetworkAclAssociationB": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {"Ref": "DMZ2Public"},
                "NetworkAclId": {
                    "Ref": "DMZNACL"
                }
            }

        },
        "DMZNACLEntryIngress100": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "100",
            "Protocol": "6",
            "PortRange": {
                "From": "22",
                "To": "22"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryIngress110": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "110",
            "Protocol": "6",
            "PortRange": {
                "From": "80",
                "To": "80"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryIngress120": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "120",
            "Protocol": "6",
            "PortRange": {
                "From": "443",
                "To": "443"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryIngress130": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "130",
            "Protocol": "6",
            "PortRange": {
                "From": "1024",
                "To": "65535"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryEgress100": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "100",
            "Protocol": "6",
            "PortRange": {
                "From": "22",
                "To": "22"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryEgress110": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "110",
            "Protocol": "6",
            "PortRange": {
                "From": "80",
                "To": "80"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryEgress120": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "120",
            "Protocol": "6",
            "PortRange": {
                "From": "443",
                "To": "443"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "DMZNACLEntryEgress130": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "DMZNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "DMZNACL"}
            },
            "RuleNumber": "130",
            "Protocol": "6",
            "PortRange": {
                "From": "1024",
                "To": "65535"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "AppNACL": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "AppNACL"
                    }
                ]
            }

        },
        "SubnetNetworkAclAssociationC": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {"Ref": "AppLayer1Private"},
                "NetworkAclId": {
                    "Ref": "AppNACL"
                }
            }

        },
        "SubnetNetworkAclAssociationD": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {"Ref": "AppLayer2Private"},
                "NetworkAclId": {
                    "Ref": "AppNACL"
                }
            }
        },
        "AppNACLEntryIngress100": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "100",
            "Protocol": "6",
            "PortRange": {
                "From": "22",
                "To": "22"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "10.90.0.0/16"

        },
        "AppNACLEntryIngress110": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "110",
            "Protocol": "6",
            "PortRange": {
                "From": "80",
                "To": "80"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "10.90.0.0/16"

        },
        "AppNACLEntryIngress120": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "120",
            "Protocol": "6",
            "PortRange": {
                "From": "443",
                "To": "443"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "10.90.0.0/16"

        },
        "AppNACLEntryIngress130": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "130",
            "Protocol": "6",
            "PortRange": {
                "From": "1024",
                "To": "65535"
            },
            "RuleAction": "allow",
            "Egress": "false",
            "CidrBlock": "10.90.0.0/16"

        },
        "AppNACLEntryEgress100": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "100",
            "Protocol": "6",
            "PortRange": {
                "From": "22",
                "To": "22"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "AppNACLEntryEgress110": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "110",
            "Protocol": "6",
            "PortRange": {
                "From": "80",
                "To": "80"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "AppNACLEntryEgress120": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "120",
            "Protocol": "6",
            "PortRange": {
                "From": "443",
                "To": "443"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        },
        "AppNACLEntryEgress130": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "DependsOn": "AppNACL",
            "Properties": {
                "NetworkAclId": {"Ref": "AppNACL"}
            },
            "RuleNumber": "130",
            "Protocol": "6",
            "PortRange": {
                "From": "1024",
                "To": "65535"
            },
            "RuleAction": "allow",
            "Egress": "true",
            "CidrBlock": "0.0.0.0/0"

        }

        






        

    }

}